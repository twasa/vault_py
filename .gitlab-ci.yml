stages:
  - check
  - build
  - delivery
  - deploy

variables:
  CONTAINER_CMD: docker
  CONTAINER_VERSION: "23.0.1"
  ECR_REPO_FQDN: 696813720027.dkr.ecr.ap-east-1.amazonaws.com
  ECR_REPO_NAME: vault_py
  ERC_ACCOUNT: AWS

default:
  before_script:
    - echo "${ECR_REPO_FQDN}"
    - echo "${ECR_REPO_NAME}"

check_container:
  stage: check
  script:
    - cd $CI_PROJECT_DIR
    - echo $CI_COMMIT_REF_NAME
  tags:
    - runner2
  only:
    - tags
  except:
    - branches

build_container_image:
  stage: build
  needs: ["check_container"]
  script:
    - cd $CI_PROJECT_DIR
    - $CONTAINER_CMD build -t "${ECR_REPO_FQDN}/${ECR_REPO_NAME}:${CI_COMMIT_TAG}" .
  tags:
    - runner2
  only:
    - tags
  except:
    - branches

delivery_to_ecr:
  stage: delivery
  needs: ["check_container", "container_build"]
  script:
    - aws ecr get-login-password | docker login -u "${ERC_ACCOUNT}" --password-stdin "${ECR_REPO_FQDN}"
    - repo_exist=$(aws ecr describe-repositories | jq -r --arg RNAME "$ECR_REPO_NAME" '.repositories[] | select(.repositoryName == $RNAME)')
    - |
      if [ -z $repo_exist ]; then
        aws ecr create-repository --repository-name "$ECR_REPO_NAME" --image-scanning-configuration scanOnPush=true
      fi
    - $CONTAINER_CMD push "${ECR_REPO_FQDN}/${ECR_REPO_NAME}:${CI_COMMIT_TAG}"
  tags:
    - runner2
  only:
    - tags
  except:
    - branches
